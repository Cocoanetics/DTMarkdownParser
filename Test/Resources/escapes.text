# Backslash-escapes: basics

\*\*don't shout\*\*

\*don't emphasize\*

\_literal underscores\_

\_\_more literal underscores\_\_

## This header has trailing hash marks \#\#


# Backslash-escapes: links

This is not a \[link](/url/).

This is a link, not an image link: \![link](/url/).

Should this be an <http://autolink\> or not?
I'll ask on markdown-discuss.
I suspect PHP markdown is considering this NOT an autolink.

This is not a [link definition\][link1] but [this is][link1].

[link1]: /url/


# Backslash-escapse: code blocks

In a code block:

    escapes should \*not\* be \_interpreted\_
    even \`backticks\`


# Backslash-escapse: code spans

Getting backticks and backslash-escapes working correctly with
code spans can be tricky:

`a normal code span`

``need multiple backticks to include a literal ` backtick``

`` `use a leading space to start a code span with a backtick``

``use a trailing space to end a code span with a backtick` ``

``backslash-escapes \(are\) \*not\* \`interpreted\` in a code span``

\``a code span prefixed with a literal backtick`

\`not a code span\`


*Note A*: The `` (?!`) `` after the `\1` group in the
`_DoCodeSpans()/_do_code_spans()` regex is necessary to ensure that a backtick
doesn't match at the start of the code block (group `\2`) in an example like
this:

- ``foo`



